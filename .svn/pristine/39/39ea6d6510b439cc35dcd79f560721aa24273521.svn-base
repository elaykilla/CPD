/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


$(document).ready(function() {

    $(".datetimepicker").each(function() {
        $(this).datetimepicker({
            pickTime: true,
            format: 'yyyy-MM-dd hh:mm:ss'
        });
    });

    $(".datepicker").each(function() {
        $(this).datetimepicker({
            pickTime: false,
            format: 'yyyy-MM-dd'
        });
    });

    $(".cochable").each(function(i) {
        $(this).attr("id", "cochable" + (i + 1));
    });
    $("div.cochable-effect").each(function(i) {
        $(this).attr("id", "cochable-effect" + (i + 1));
        if ($("#cochable" + (i + 1) + ':checked').val() !== undefined) {
            // la case est donc cochée -> on affiche
            $(this).show();
        }
        else {
            // la case n'est donc pas cochée -> on affiche
            $(this).hide();
        }
        $("#cochable" + (i + 1)).click(function() {
            if ($("#cochable" + (i + 1) + ':checked').val() === undefined) {
                // la case est donc cochée -> on affiche
                $("#cochable-effect" + (i + 1)).slideToggle("slow");
                $("#cochable-effect" + (i + 1)).show();
            }
            else {
                // la case n'est donc pas cochée -> on affiche
                $("#cochable-effect" + (i + 1)).hide();
                $("#cochable-effect" + (i + 1)).slideToggle("slow");
            }
        });
    });

    $(".cochable-inverse").each(function(i) {
        $(this).attr("id", "cochable-inverse" + (i + 1));
    });
    $("div.cochable-effect-inverse").each(function(i) {
        $(this).attr("id", "cochable-effect-inverse" + (i + 1));
        if ($("#cochable-inverse" + (i + 1) + ':checked').val() === undefined) {
            // la case est donc cochée -> on affiche
            $(this).show();
        }
        else {
            // la case n'est donc pas cochée -> on affiche
            $(this).hide();
        }
        $("#cochable-inverse" + (i + 1)).click(function() {
            if ($("#cochable-inverse" + (i + 1) + ':checked').val() !== undefined) {
                // la case est donc cochée -> on affiche
                $("#cochable-effect-inverse" + (i + 1)).slideToggle("slow");
                $("#cochable-effect-inverse" + (i + 1)).show();
            }
            else {
                // la case n'est donc pas cochée -> on affiche
                $("#cochable-effect-inverse" + (i + 1)).hide();
                $("#cochable-effect-inverse" + (i + 1)).slideToggle("slow");
            }
        });
    });

    $("span.cachable-button").each(function(i) {
        $(this).attr("id", "cachable-button" + (i + 1));
    });

    $("div.cachable").each(function(i) {
        if ($(this).attr('class') === "cachable active") {
            $(this).show();
        } else {
            $(this).hide();
        }
        $(this).attr("id", "cachable" + (i + 1));
        $("#cachable-button" + (i + 1))
                .attr("statut", "1")
                .click(function() {
            $("#cachable" + (i + 1)).slideToggle("slow");
            // selon le statut on renomme le texte
            if ($("#cachable-button" + (i + 1)).attr("statut") === "1") {
                $("#cachable-button" + (i + 1)).attr("statut", "0");
            }
            else {
                $("#cachable-button" + (i + 1)).attr("statut", "1");
            }
            ;
        });
    });

    $("div.zoneTexte").each(function() {
        // on récupère la longueur du texte et on coupe à la longueur 100 (s'il est aussi long)
        var contenu = $(this).text();
        $(this).html(contenu);
        contenu = $(this).text();
        var longueur = contenu.length;
        if (longueur > 100) {
            var debut = contenu.substr(0, 100) + "...";
            $(this).text(debut);
        } else {
            $(this).html(contenu);
        }
    });

    updateComment();

    $("div.text").each(function(i) {
        // on récupère la longueur du texte et on coupe à la longueur 100 (s'il est aussi long)
        var contenu = $(this).text();
        $(this).html(contenu);
        $(this).find("iframe").attr("style", "height: 300px;").addClass("span12");
    });

    $(function() {
        // Expose the form 
        $('#comment-form').click(function() {
            $('#comment-form').expose({api: true}).load();
        });

        // If there is an error, focus to form
        if ($('#comment-form .error').size()) {
            $('#comment-form').expose({api: true, loadSpeed: 0}).load();
            $('#comment-form input[type=text]').get(0).focus();
        }
    });

    $('.range').each(function() {
        var cls = $(this).attr('class');
        var matches = cls.split(/([a-zA-Z]+)\-([0-9]+)/g);
        var elem = $(this).parent();
        var options = {};
        var input = elem.find('input');
        elem.append('<div id="slider" class="uirange"></div>');
        var label = elem.find('label');
        for (i in matches) {
            i = i * 1;
            if (matches[i] == 'min') {
                options.min = matches[i + 1] * 1;
            }
            if (matches[i] == 'max') {
                options.max = matches[i + 1] * 1;
            }
        }

        options.slide = function(event, ui) {
            var p = ui.value;
            var feedback_id = elem.find("span.feedback-id").text();
            if (feedback_id != "-1") {
                elem.find('label span').empty().append(ui.value);
                input.val(ui.value);
                var hex = hexFromRGB(g(p), f(p), 0);
                elem.find('.ui-slider-range').css("background", "#" + hex);
                elem.find('.ui-slider-handle').css("background", "#" + hex);
                label.css("color", "#" + hex).css("font-weight", "bold").css("font-size", "16px");
            }
        };
        options.stop = function(event, ui) {
            var feedback_id = elem.find("span.feedback-id").text();
            var progress = ui.value * 1;
            if (feedback_id != "-1") {
                $("#ajax-loader").show();
                $.ajax({
                    type: "POST",
                    url: "/administration/updateprogress",
                    data: {
                        feedback_id: feedback_id,
                        progress: progress
                    },
                    success: function(data) {
                        $("div.ajax").css("display: block;");
                        console.log(data[0]);
                        $("#ajax-loader").hide();
                        if (progress == 100) {
                            uirange.hide();
                            var hex = hexFromRGB(g(progress), f(progress), 0);
                            label.css("color", "#" + hex).css("font-weight", "bold").css("font-size", "16px");
                        }
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        alert(errorThrown);
                        $("#ajax-loader").hide();
                    }
                });
            }
        };
        var p = input.val() * 1;
        if (isNaN(p))
            p = 0;
        options.value = p;
        options.range = 'min';
        var uirange = elem.find('.uirange');
        uirange.slider(options);
        elem.find('label span').empty().append(p);
        var hex = hexFromRGB(g(p), f(p), 0);
        elem.find('.ui-slider-handle').css("background", "#" + hex);
        elem.find('.ui-slider-range').css("background", "#" + hex);
        label.css("color", "#" + hex).css("font-weight", "bold").css("font-size", "16px");
        if (p == 100) {
            uirange.hide();
            label.css("color", "#" + hex).css("font-weight", "bold").css("font-size", "16px");
        }
    });
});

function updateComment() {
    $("div.zone-texte").each(function(i) {
        // on récupère la longueur du texte et on coupe à la longueur 100 (s'il est aussi long)
        var contenu = $(this).text();
        $(this).html(contenu);
    });
}

function disable() {
    $("#formConversations").hide();
    return true;
}

function hexFromRGB(r, g, b) {
    var hex = [
        r.toString(16),
        g.toString(16),
        b.toString(16)
    ];
    $.each(hex, function(nr, val) {
        if (val.length === 1) {
            hex[ nr ] = "0" + val;
        }
    });
    return hex.join("").toUpperCase();
}

function f(p) {
    if (p <= 20)
        return 0;
    if (p <= 40)
        return Math.floor(255 * (p - 20) / 20);
    if (p <= 80)
        return 255;
    return Math.floor(255 - 127 * (p - 80) / 20);
}

function g(p) {
    if (p <= 60)
        return 255;
    if (p <= 80)
        return Math.floor(255 - 255 * (p - 60) / 20);
    return 0;
}

function showTools(id, flag) {
    if (flag) {
        $(".tools-" + id).show();
    } else {
        $(".tools-" + id).hide();
    }
    return true;
}

function postComment(action, url) {
    $("#ajax-loader").show();
    var form = $("#" + action + "-comment");
    $.ajax({
        type: "POST",
        url: "/" + action + "s/postcomment",
        data: form.serialize(),
        success: function(data) {
            if (data[0] == "error") {
                form.find("p.error").text(data[1]).css("display", "block").css("color", "red");
            } else {
//                $("#" + action + "-comments").prepend(data);
                $("#" + action + "-comments").html(data);
                form.find("p textarea.field-area").val("");
                form.find("p.error").text("").css("display", "none");
                var count = $("#" + action + "-comments").find("span.maxSize").text() * 1;
                $("#" + action + "-comments-count").html(count + " Comment" + (count > 1 ? 's' : ''));
                updateComment();
            }
            $("#ajax-loader").hide();
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            alert(errorThrown);
            $("#ajax-loader").hide();
        }
    });
    return false;
}

function deleteComment(action, oid, cid) {
    $("#ajax-loader").show();
    $.ajax({
        type: "POST",
        url: "/" + action + "s/deletecomment",
        data: {
            id: oid,
            commentId: cid
        },
        success: function(data) {
            if (data[0] == "error") {
                $("#" + action + "-comments").find("p.error").text(data[1]).css("display", "block").css("color", "red");
            } else {
                $("#" + action + "-comments").html(data);
                var count = $("#" + action + "-comments").find("span.maxSize").text() * 1;
                $("#" + action + "-comments-count").html(count + " Comment" + (count > 1 ? 's' : ''));
                updateComment();
            }
            $("#ajax-loader").hide();
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            alert(errorThrown);
            $("#ajax-loader").hide();
        }
    });
    return false;
}

function getMoreComment(id, action, page) {
    $("#ajax-loader").show();
    var form = $("#" + action + "-comment");
    $.ajax({
        type: "GET",
        url: "/articles/comments",
        data: {
            id: id,
            type: action,
            page: page
        },
        success: function(data) {
            if (data[0] == "error") {
                form.find("p.error").text(data[1]).css("display", "block").css("color", "red");
            } else {
                $("#" + action + "-comments").html(data);
                var count = $("#" + action + "-comments").find("span.maxSize").text() * 1;
                $("#" + action + "-comments-count").html(count + " Comment" + (count > 1 ? 's' : ''));
                updateComment();
            }
            $("#ajax-loader").hide();
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            alert(errorThrown);
            $("#ajax-loader").hide();
        }
    });
    return false;
}

/**
 * Envoie du message pas ajax.
 * @param {type} id
 * @param {type} formid
 * @returns {Boolean}
 */
function sendAjaxMessage(id, formid) {
    $("#ajax-loader").show();
    var form = $("#" + formid);
    form.find("input#send-button").attr("disabled", "true");
    $.ajax({
        type: "POST",
        url: "/conversations/sendajaxmessage",
        data: form.serialize(),
        success: function(data) {
            if (data[0] == "error") {
                form.find("p.error").text(data[1]).css("display", "block").css("color", "red");
            } else {
                $("#" + id).html(data);
                form.find("textarea.form-control").val("");
                form.find("p.error").text("").css("display", "none");
            }
            $("#ajax-loader").hide();
            form.find("input#send-button").attr("disabled", "false");
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            alert(errorThrown);
            $("#ajax-loader").hide();
            form.find("input#send-button").attr("disabled", "false");
        }
    });
    return false;
}

function deleteMessage(divid, messagedivid, id, userId) {
    $("#ajax-loader").show();
    $.ajax({
        type: "POST",
        url: "/conversations/deletemessage",
        data: {
            id: id,
            userId: userId,
            ajax: true
        },
        success: function(data) {
            $("#" + messagedivid).hide();
            if (data[0] == "error") {
                alert(data[1]);
            } else {
                $("#" + divid).html(data);
            }
            $("#ajax-loader").hide();
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            alert(errorThrown);
            $("#ajax-loader").hide();
        }
    });
    return false;
}

/**
 * 
 * @param {type} type
 * @param {type} page
 * @returns {Boolean}
 */
function instantSearch(type, page) {
    var form = $("#" + type + "instant-search");
    var scroll = $("#" + type + "instant-search-result").find("span.scrollable").text();
    var h = "410px";
    if (type == 'admin-')
        h = '310px';
    $.ajax({
        type: "POST",
        url: "/annuaires/instantsearch",
        data: {
            q: form.find("input.content").val(),
            type: type,
            page: page
        },
        success: function(data) {
            if (data[0] == 'error') {
                $("#" + type + "instant-search-result").html(data[1]);
                $("#" + type + "instant-search-result").attr("style", "overflow: scroll; width: auto; height: auto; background-color: #ccc;");
            } else {
                $("#" + type + "instant-search-result").html(data);
                if (scroll == 'true') {
                    $("#" + type + "instant-search-result").attr("style", "overflow: scroll; width: auto; height:" + h + "; background-color: #ccc;");
                } else {
                    $("#" + type + "instant-search-result").attr("style", "overflow: scroll; width: auto; height: auto; background-color: #ccc;");
                }
            }
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            alert(errorThrown);
        }
    });
    return true;
}

$(function() {
    $("#datepicker").datepicker({
        changeMonth: true,
        changeYear: true
    });
});

/*
 Count down until any date script-
 By JavaScript Kit (www.javascriptkit.com)
 Over 200+ free scripts here!
 Modified by Robert M. Kuhnhenn, D.O. 
 on 5/30/2006 to count down to a specific date AND time,
 and on 1/10/2010 to include time zone offset.
 */

/*  Change the items below to create your countdown target date and announcement once the target date and time are reached.  */
var current = "Date dépassée!";        //—>enter what you want the script to display when the target date and time are reached, limit to 20 characters
var year = 2013;        //—>Enter the count down target date YEAR
var month = 06;          //—>Enter the count down target date MONTH
var day = 15;           //—>Enter the count down target date DAY
var hour = 16;          //—>Enter the count down target date HOUR (24 hour clock)
var minute = 30;        //—>Enter the count down target date MINUTE
//            var tz = -5;            //—>Offset for your timezone in hours from UTC (see http://wwp.greenwichmeantime.com/index.htm to find the timezone offset for your location)

//—>    DO NOT CHANGE THE CODE BELOW!    <—
var montharray = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");

function countdown(yr, m, d, hr, min) {
    theyear = yr;
    themonth = m;
    theday = d;
    thehour = hr;
    theminute = min;
    //current = status;
    var today = new Date();
    var todayy = today.getYear();
    if (todayy < 1000) {
        todayy += 1900;
    }
    var todaym = today.getMonth();
    var todayd = today.getDate();
    var todayh = today.getHours();
    var todaymin = today.getMinutes();
    var todaysec = today.getSeconds();
    var todaystring1 = montharray[todaym] + " " + todayd + ", " + todayy + " " + todayh + ":" + todaymin + ":" + todaysec;
    var todaystring = Date.parse(todaystring1);
    var futurestring1 = (montharray[m - 1] + " " + d + ", " + yr + " " + hr + ":" + min);
    var futurestring = Date.parse(futurestring1);

    var dd = futurestring - todaystring;
    var dday = Math.floor(dd / (60 * 60 * 1000 * 24) * 1);
    var dhour = Math.floor((dd % (60 * 60 * 1000 * 24)) / (60 * 60 * 1000) * 1);
    var dmin = Math.floor(((dd % (60 * 60 * 1000 * 24)) % (60 * 60 * 1000)) / (60 * 1000) * 1);
    var dsec = Math.floor((((dd % (60 * 60 * 1000 * 24)) % (60 * 60 * 1000)) % (60 * 1000)) / 1000 * 1);
    if (dday <= 0 && dhour <= 0 && dmin <= 0 && dsec <= 0) {
        document.getElementById('count2').innerHTML = current;
        document.getElementById('count2').style.display = "inline";
        document.getElementById('count2').style.width = "390px";
        document.getElementById('dday').style.display = "none";
        document.getElementById('dhour').style.display = "none";
        document.getElementById('dmin').style.display = "none";
        document.getElementById('dsec').style.display = "none";
        document.getElementById('days').style.display = "none";
        document.getElementById('hours').style.display = "none";
        document.getElementById('minutes').style.display = "none";
        document.getElementById('seconds').style.display = "none";
        return;
    }
    else {
        document.getElementById('count2').style.display = "none";
        document.getElementById('dday').innerHTML = dday;
        document.getElementById('dhour').innerHTML = dhour < 10 ? "0" + dhour : dhour;
        document.getElementById('dmin').innerHTML = dmin < 10 ? "0" + dmin : dmin;
        document.getElementById('dsec').innerHTML = dsec < 10 ? "0" + dsec : dsec;
        setTimeout("countdown(theyear,themonth,theday,thehour,theminute)", 1000);
    }

}


jQuery(document).ready(function() {
    App.init();
    App.initSliders();
    //App.initBxSlider1();
    App.initBxSlider();
    Index.initParallaxSlider();
    App.initFancybox();
    Contact.initMap();


});


function test(test) {
    alert(test);
}